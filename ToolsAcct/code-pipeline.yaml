AWSTemplateFormatVersion: '2010-09-09'
Description: CodePipeline for a SAM application
Parameters:
  repositoryName:
    Description: The name of the GitHub repository containing the code to be built. This will also be used as the project name.
    Type: String
  repositoryOrganization:
    Description: The name of the GitHub organization containing the repository to be built
    Type: String
  repositoryBranch:
    Description: The name of the GitHub branch with the source
    Type: String
  codestarConnectionArn:
    Description: The ARN of the CodeStar connection to GitHub
    Type: String
  artifactBucket:
    Description: S3 Bucket, which will hold the artifacts
    Type: String
  devAccount:
    Description: AWS account number for DEV
    Type: String
  prodAccount:
    Description: AWS account number for PROD
    Type: String
  s3KmsKeyArn:
    Description: ARN of the KMS CMK creates in Tools account. For cross-account actions, you can only use the key ID or key ARN to identify the key.
    Type: String
  CrossAccountCondition:
    Description: Conditionally creates the resources for cross account access
    Type: String
    Default: false

Conditions:
  AddCodeBuildResource: !Equals [ !Ref CrossAccountCondition, 'true' ]

Resources:

  BuildProjectRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${repositoryName}-CodeBuildRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
  BuildProjectPolicy:
    Type: AWS::IAM::Policy
    DependsOn: S3BucketPolicy
    Properties:
      PolicyName: !Sub ${repositoryName}-CodeBuildPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetBucketPolicy
              - s3:GetObject
              - s3:ListBucket

            Resource:
             - !Join ['',['arn:aws:s3:::',!Ref artifactBucket, '/*']]
             - !Join ['',['arn:aws:s3:::',!Ref artifactBucket]]
          -
            Effect: Allow
            Action:
              - kms:*
            Resource: !Ref s3KmsKeyArn
          -
            Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
      Roles:
        -
          !Ref BuildProjectRole
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref repositoryName
      Description: !Ref repositoryName
      EncryptionKey: !Ref s3KmsKeyArn
      ServiceRole: !GetAtt BuildProjectRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/standard:7.0
        EnvironmentVariables:
          - Name: ARTIFACT_BUCKET
            Value: !Ref artifactBucket
      Source:
        Type: CODEPIPELINE
        BuildSpec: 'buildspec.yml'
        InsecureSsl: false
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
      TimeoutInMinutes: 10
  PipeLineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${repositoryName}-codepipeline-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
  PipelinePolicy:
    Type: AWS::IAM::Policy
    DependsOn: S3BucketPolicy
    Properties:
      PolicyName: !Sub ${repositoryName}-codepipeline-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - codepipeline:*
              - iam:ListRoles
              - cloudformation:Describe*
              - cloudFormation:List*
              - codecommit:List*
              - codecommit:Get*
              - codecommit:GitPull
              - codecommit:UploadArchive
              - codecommit:CancelUploadArchive
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
              - iam:PassRole
              - s3:ListAllMyBuckets
              - s3:GetBucketLocation
            Resource:
              - "*"
          -
            Effect: Allow
            Action:
              - kms:Decrypt
            Resource: !Ref s3KmsKeyArn
          -
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetBucketPolicy
              - s3:GetObject
              - s3:ListBucket
            Resource:
             - !Join ['',['arn:aws:s3:::',!Ref artifactBucket, '/*']]
             - !Join ['',['arn:aws:s3:::',!Ref artifactBucket]]
          -
            Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !Sub arn:aws:iam::${prodAccount}:role/ToolsAcctCodePipelineCloudFormationRole
              - !Sub arn:aws:iam::${devAccount}:role/ToolsAcctCodePipelineCloudFormationRole

      Roles:
        -
          !Ref PipeLineRole
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt PipeLineRole.Arn
      Name: !Ref AWS::StackName
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Version: '1'
                Owner: AWS
                Category: Source
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: GitHubSourceArtifact
              RunOrder: 1
              Configuration:
                ConnectionArn: !Ref codestarConnectionArn
                FullRepositoryId: !Sub '${repositoryOrganization}/${repositoryName}'
                BranchName: !Ref repositoryBranch
                OutputArtifactFormat: 'CODE_ZIP'
        -
          Name: Build
          Actions:
          -
            Name: Build
            ActionTypeId:
              Category: Build
              Owner: AWS
              Version: 1
              Provider: CodeBuild
            Configuration:
              ProjectName: !Ref BuildProject
            RunOrder: 1
            InputArtifacts:
              - Name: GitHubSourceArtifact
            OutputArtifacts:
              - Name: BuildOutputArtifact
        - Name: DeployToTest
          Actions:
            - Name: CreateChangeSetDev
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ChangeSetName: codepipeline-dev
                ActionMode: CHANGE_SET_REPLACE
                StackName: !Ref repositoryName
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: BuildOutputArtifact::packaged-template.yml
                #RoleArn: !Sub arn:aws:iam::${devAccount}:role/cloudformationdeployer-role
                RoleArn:
                  Fn::If:
                  - AddCodeBuildResource
                  - !Sub arn:aws:iam::${devAccount}:role/cloudformationdeployer-role
                  - !Ref AWS::NoValue
              InputArtifacts:
                - Name: BuildOutputArtifact
              RunOrder: 1
              #RoleArn: !Sub arn:aws:iam::${devAccount}:role/ToolsAcctCodePipelineCloudFormationRole
              RoleArn:
                  Fn::If:
                  - AddCodeBuildResource
                  - !Sub arn:aws:iam::${devAccount}:role/ToolsAcctCodePipelineCloudFormationRole
                  - !Ref AWS::NoValue
            - Name: DeployChangeSetDev
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ChangeSetName: codepipeline-dev
                ActionMode: CHANGE_SET_EXECUTE
                StackName: !Ref repositoryName
                #RoleArn: !Sub arn:aws:iam::${devAccount}:role/cloudformationdeployer-role
                RoleArn:
                  Fn::If:
                  - AddCodeBuildResource
                  - !Sub arn:aws:iam::${devAccount}:role/cloudformationdeployer-role
                  - !Ref AWS::NoValue
              InputArtifacts:
                - Name: BuildOutputArtifact
              RunOrder: 2
              #RoleArn: !Sub arn:aws:iam::${devAccount}:role/ToolsAcctCodePipelineCloudFormationRole
              RoleArn:
                  Fn::If:
                  - AddCodeBuildResource
                  - !Sub arn:aws:iam::${devAccount}:role/ToolsAcctCodePipelineCloudFormationRole
                  - !Ref AWS::NoValue
        - Name: ApproveDeployProd
          Actions:
          -
            Name: ApproveDeployProd
            ActionTypeId:
              Category: Approval
              Owner: AWS
              Version: 1
              Provider: Manual
            Configuration:
              CustomData: "Verify DEV before production."
        - Name: DeployToProduction
          Actions:
            - Name: CreateChangeSetProd
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ChangeSetName: codepipeline-prod
                ActionMode: CHANGE_SET_REPLACE
                StackName: !Ref repositoryName
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: BuildOutput::packaged-template.yml
                #RoleArn: !Sub arn:aws:iam::${prodAccount}:role/cloudformationdeployer-role
                RoleArn:
                  Fn::If:
                  - AddCodeBuildResource
                  - !Sub arn:aws:iam::${prodAccount}:role/cloudformationdeployer-role
                  - !Ref AWS::NoValue
              InputArtifacts:
                - Name: BuildOutputArtifact
              RunOrder: 1
              #RoleArn: !Sub arn:aws:iam::${prodAccount}:role/ToolsAcctCodePipelineCloudFormationRole
              RoleArn:
                  Fn::If:
                  - AddCodeBuildResource
                  - !Sub arn:aws:iam::${prodAccount}:role/ToolsAcctCodePipelineCloudFormationRole
                  - !Ref AWS::NoValue
            - Name: DeployChangeSetProd
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ChangeSetName: codepipeline-prod
                ActionMode: CHANGE_SET_EXECUTE
                StackName: sample-lambda-production
                #RoleArn: !Sub arn:aws:iam::${prodAccount}:role/cloudformationdeployer-role
                RoleArn:
                  Fn::If:
                  - AddCodeBuildResource
                  - !Sub arn:aws:iam::${prodAccount}:role/cloudformationdeployer-role
                  - !Ref AWS::NoValue
              InputArtifacts:
                - Name: BuildOutputArtifact
              RunOrder: 2
              #RoleArn: !Sub arn:aws:iam::${prodAccount}:role/ToolsAcctCodePipelineCloudFormationRole
              RoleArn:
                Fn::If:
                - AddCodeBuildResource
                - !Sub arn:aws:iam::${prodAccount}:role/ToolsAcctCodePipelineCloudFormationRole
                - !Ref AWS::NoValue

      ArtifactStore:
        Type: S3
        Location: !Ref artifactBucket
        EncryptionKey:
          Id: !Ref s3KmsKeyArn
          Type: KMS
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref artifactBucket
      PolicyDocument:
        Statement:
          -
            Action:
              - s3:*
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::${artifactBucket}
              - !Sub arn:aws:s3:::${artifactBucket}/*
            Principal:
              AWS:
                - !Sub arn:aws:iam::${devAccount}:role/ToolsAcctCodePipelineCloudFormationRole
                - !Sub arn:aws:iam::${devAccount}:role/cloudformationdeployer-role
                - !Sub arn:aws:iam::${prodAccount}:role/ToolsAcctCodePipelineCloudFormationRole
                - !Sub arn:aws:iam::${prodAccount}:role/cloudformationdeployer-role
                - !GetAtt [BuildProjectRole,Arn]
